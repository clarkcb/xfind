package gofind

func GetFindOptions() *FindOptions {
	return &FindOptions{
		[]*FindOption{
			{"a", "allmatches", "Capture all matches*"},
			{"", "archivesonly", "Find only archive files"},
			{"", "debug", "Set output mode to debug"},
			{"e", "encoding", "Set the encoding to use with text files (default: \"utf-8\")"},
			{"", "excludehidden", "Exclude hidden files and directories*"},
			{"1", "firstmatch", "Capture only the first file+pattern match"},
			{"h", "help", "Print this usage and exit"},
			{"", "includehidden", "Include hidden files and directories"},
			{"", "in-archiveext", "Specify extension for archive files to include in find"},
			{"", "in-archivefilepattern", "Specify name pattern for archive files to include in find"},
			{"d", "in-dirpattern", "Specify name pattern for directories to include in find"},
			{"x", "in-ext", "Specify extension for files to include in find"},
			{"f", "in-filepattern", "Specify name pattern for files to include in find"},
			{"t", "in-filetype", "File type to find (text, binary)"},
			{"", "in-linesafterpattern", "Specify pattern to find the \"lines-after\" lines on"},
			{"", "in-linesbeforepattern", "Specify pattern to find the \"lines-before\" lines on"},
			{"L", "linesafter", "Number of lines to include after every matched line (default: 0)"},
			{"", "linesaftertopattern", "Specify pattern to collect lines after up to where pattern matched"},
			{"", "linesafteruntilpattern", "Specify pattern to collect lines after until pattern matched"},
			{"l", "linesbefore", "Number of lines to include before every matched line (default: 0)"},
			{"", "listdirs", "Generate a list of the matching directories after finding"},
			{"", "listfiles", "Generate a list of the matching files after finding"},
			{"", "listlines", "Generate a list of the matching lines after finding"},
			{"w", "maxlinelength", "Max length of line of result to print out (default: 150)"},
			{"m", "multilineoption-REMOVE", "Find files as single multi-line content block"},
			{"P", "noprintmatches", "Suppress printing of find results to stdout"},
			{"R", "norecursive", "Do not find recursively (no subdirectories)"},
			{"Z", "nofindarchives", "Do not find archive files (bz2, gz, tar, zip)*"},
			{"", "out-archiveext", "Specify extension for archive files to exclude from find"},
			{"", "out-archivefilepattern", "Specify name pattern for archive files to exclude from find"},
			{"D", "out-dirpattern", "Specify name pattern for directories to exclude from find"},
			{"X", "out-ext", "Specify extension for files to exclude from find"},
			{"F", "out-filepattern", "Specify name pattern for files to exclude from find"},
			{"T", "out-filetype", "File type not to find (text, binary)"},
			{"", "out-linesafterpattern", "Specify pattern to filter the \"lines-after\" lines on"},
			{"", "out-linesbeforepattern", "Specify pattern to filter the \"lines-before\" lines on"},
			{"p", "printmatches", "Print find results to stdout*"},
			{"r", "recursive", "Find recursively through subdirectories*"},
			{"s", "findpattern", "Specify find pattern"},
			{"z", "findarchives", "Find archive files (bz2, gz, tar, zip)"},
			{"", "settings-file", "A path to a JSON file with specified find settings"},
			{"u", "uniquelines", "Save only find results with unique lines from previous results"},
			{"v", "verbose", "Set output mode to verbose"},
			{"V", "version", "Print version and exit"},
		},
	}
}
