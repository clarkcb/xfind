package xsearch

func GetSearchOptions() *SearchOptions {
	return &SearchOptions{
		[]*SearchOption{
			&SearchOption{"a", "allmatches", "Capture all matches*"},
			&SearchOption{"", "archivesonly", "Search only archive files"},
			&SearchOption{"", "debug", "Set output mode to debug"},
			&SearchOption{"t", "dotiming", "Measure search execution duration"},
			&SearchOption{"", "excludehidden", "Exclude hidden files and directories*"},
			&SearchOption{"1", "firstmatch", "Capture only the first file+pattern match"},
			&SearchOption{"h", "help", "Print this usage and exit"},
			&SearchOption{"", "includehidden", "Include hidden files and directories"},
			&SearchOption{"", "in-archiveext", "Specify extension for archive files to include in search"},
			&SearchOption{"", "in-archivefilepattern", "Specify name pattern for archive files to include in search"},
			&SearchOption{"d", "in-dirpattern", "Specify name pattern for directories to include in search"},
			&SearchOption{"x", "in-ext", "Specify extension for files to include in search"},
			&SearchOption{"f", "in-filepattern", "Specify name pattern for files to include in search"},
			&SearchOption{"", "in-linesafterpattern", "Specify pattern to search the \"lines-after\" lines on"},
			&SearchOption{"", "in-linesbeforepattern", "Specify pattern to search the \"lines-before\" lines on"},
			&SearchOption{"B", "linesafter", "Number of lines to include after every matched line (default: 0)"},
			&SearchOption{"", "linesaftertopattern", "Specify pattern to collect lines after up to where pattern matched"},
			&SearchOption{"", "linesafteruntilpattern", "Specify pattern to collect lines after until pattern matched"},
			&SearchOption{"b", "linesbefore", "Number of lines to include before every matched line (default: 0)"},
			&SearchOption{"", "listdirs", "Generate a list of the matching directories after searching"},
			&SearchOption{"", "listfiles", "Generate a list of the matching files after searching"},
			&SearchOption{"", "listlines", "Generate a list of the matching lines after searching"},
			&SearchOption{"w", "maxlinelength", "Max length of line of result to print out (default: 150)"},
			&SearchOption{"m", "multilinesearch", "Search files as single multi-line content block"},
			&SearchOption{"P", "noprintmatches", "Suppress printing of search results to stdout"},
			&SearchOption{"R", "norecursive", "Do not search recursively"},
			&SearchOption{"Z", "nosearcharchives", "Do not search archive files (bz2, gz, tar, zip)*"},
			&SearchOption{"", "out-archiveext", "Specify extension for archive files to exclude from search"},
			&SearchOption{"", "out-archivefilepattern", "Specify name pattern for archive files to exclude from search"},
			&SearchOption{"D", "out-dirpattern", "Specify name pattern for directories to exclude from search"},
			&SearchOption{"X", "out-ext", "Specify extension for files to exclude from search"},
			&SearchOption{"F", "out-filepattern", "Specify name pattern for files to exclude from search"},
			&SearchOption{"", "out-linesafterpattern", "Specify pattern to filter the \"lines-after\" lines on"},
			&SearchOption{"", "out-linesbeforepattern", "Specify pattern to filter the \"lines-before\" lines on"},
			&SearchOption{"p", "printmatches", "Print search results to stdout*"},
			&SearchOption{"r", "recursive", "Search recursively through subdirectories*"},
			&SearchOption{"s", "search", "Specify search pattern"},
			&SearchOption{"z", "searcharchives", "Search archive files (bz2, gz, tar, zip)"},
			&SearchOption{"u", "uniquelines", "Save only search results with unique lines from previous results"},
			&SearchOption{"v", "verbose", "Set output mode to verbose"},
			&SearchOption{"V", "version", "Print version and exit"},
		},
	}
}
