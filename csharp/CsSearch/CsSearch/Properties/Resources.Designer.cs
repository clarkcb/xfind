//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CsSearch.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CsSearch.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;filetypes&gt;
        ///  &lt;filetype name=&quot;binary&quot;&gt;
        ///    &lt;extensions&gt;ai bin class com dat dbmdl dcr dir dll dxr dms doc dot exe hlp indd lnk mo obj pdb ppt psd pyc pyo qxd
        ///      so swf sys vsd xls xlt&lt;/extensions&gt;
        ///  &lt;/filetype&gt;
        ///  &lt;filetype name=&quot;code&quot;&gt;
        ///    &lt;extensions&gt;bash bat boo bsh c c++ cc clj cpp cs csh cxx fs h h++ hh hpp java js pas php php3 pl py rb sbt scala sh
        ///      tcl vb&lt;/extensions&gt;
        ///  &lt;/filetype&gt;
        ///  &lt;filetype name=&quot;compressed&quot;&gt;
        ///    &lt;extensions&gt;bz2 cpio ear gz hqx jar pax [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string filetypes {
            get {
                return ResourceManager.GetString("filetypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;searchoptions&gt;
        ///  &lt;searchoption long=&quot;allmatches&quot; short=&quot;a&quot;&gt;
        ///    Capture all matches*
        ///  &lt;/searchoption&gt;
        ///  &lt;searchoption long=&quot;debug&quot; short=&quot;&quot;&gt;
        ///    Set output mode to debug
        ///  &lt;/searchoption&gt;
        ///  &lt;searchoption long=&quot;firstmatch&quot; short=&quot;1&quot;&gt;
        ///    Capture only the first match for a file+search combination
        ///  &lt;/searchoption&gt;
        ///  &lt;searchoption long=&quot;help&quot; short=&quot;h&quot;&gt;
        ///    Print this usage and exit
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string searchoptions {
            get {
                return ResourceManager.GetString("searchoptions", resourceCulture);
            }
        }
    }
}
