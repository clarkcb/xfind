module RbFind
  # Finder - finds files according to settings
  class Finder
    @settings: FindSettings
    @file_types: FileTypes

    attr_reader settings: FindSettings

    def initialize: (FindSettings settings) -> void

    def matching_dir?: (String dir_path) -> bool

    def has_matching_archive_ext?: (FileResult file_result) -> bool

    def has_matching_ext?: (FileResult file_result) -> bool

    def has_matching_archive_file_name?: (FileResult file_result) -> bool

    def has_matching_file_name?: (FileResult file_result) -> bool

    def has_matching_file_type?: (FileResult file_result) -> bool

    def has_matching_file_size?: (FileResult file_result) -> bool

    def has_matching_last_mod?: (FileResult file_result) -> bool

    def matching_archive_file_result?: (FileResult file_result) -> bool

    def matching_file_result?: (FileResult file_result) -> bool

    def matching_archive_file?: (String file_path) -> bool

    def matching_file?: (String file_path) -> bool

    def filter_to_file_result: (String file_path) -> (nil | FileResult)

    def find: () -> Array[FileResult]

    private

    def sort_file_results: (Array[FileResult] file_results) -> void

    def validate_settings: () -> void

    def matches_any_pattern?: (String str, Set[Regexp] pattern_set) -> bool

    def any_matches_any_pattern?: (Array[String] str_list, Set[Regexp] pattern_set) -> bool

    def file_path_to_file_result: (String file_path) -> FileResult

    def get_file_results: (String file_path) -> Array[FileResult]
  end
end
